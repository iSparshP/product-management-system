services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=youruser
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=productdb
      - KAFKA_BROKERS=kafka:9092
      - REDIS_ADDR=redis:6379
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_S3_BUCKET=yourbucket
      - AWS_REGION=us-east-1
      - LOG_LEVEL=info
    depends_on:
      - postgres
      - redis
      - kafka
      - zookeeper
    volumes:
      - ./configs:/root/configs

  image-processor:
    build:
      context: .
      dockerfile: Dockerfile.processor
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=youruser
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=productdb
      - KAFKA_BROKERS=kafka:9092
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_S3_BUCKET=yourbucket
      - AWS_REGION=us-east-1
      - LOG_LEVEL=info
    depends_on:
      - postgres
      - kafka
      - zookeeper
    volumes:
      - ./configs:/root/configs

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=youruser
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=productdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

volumes:
  postgres_data: 